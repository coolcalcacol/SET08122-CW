name: CI

on:
    push:
    workflow_dispatch:

jobs:
    build-executable:
        runs-on: ubuntu-latest
        steps:
            -   name: Check out the repo
                uses: actions/checkout@v3

            -   name: Set up Node v18
                uses: actions/setup-node@v3
                with:
                   node-version: 18
                   cache: 'yarn'

            -   name: Install dependencies
                run: yarn install

            -   name: Build, compile and package the app
                run: yarn export

            -   name: Upload executable
                uses: actions/upload-artifact@v3
                with:
                    name: sudoku
                    path: dist/sudoku.exe



    build-leaderboard:
        runs-on: ubuntu-latest
        needs:
            -   extract-branch
            -   check-folders
        if: ${{ needs.check-folders.outputs.run_leaderboard_job == 'true' }}
        steps:
            -   name: Check out the repo
                uses: actions/checkout@v3
                with:
                    submodules: recursive

            -   name: Login to the registry
                uses: docker/login-action@v2
                with:
                    registry: registry.private6mans.xyz
                    username: p6m
                    password: ${{ secrets.REGISTRY_AUTH }}

            -   name: Build and push Docker image
                uses: docker/build-push-action@v4
                with:
                    context: .
                    file: docker/Dockerfile.leaderboard
                    push: true
                    tags: registry.private6mans.xyz/leaderboard:${{ needs.extract-branch.outputs.branch }}

    build-dashboard:
        runs-on: ubuntu-latest
        needs:
            -   extract-branch
            -   check-folders
        if: ${{ needs.check-folders.outputs.run_dashboard_job == 'true' }}
        steps:
            -   name: Check out the repo
                uses: actions/checkout@v3
                with:
                    submodules: recursive

            -   name: Login to the registry
                uses: docker/login-action@v2
                with:
                    registry: registry.private6mans.xyz
                    username: p6m
                    password: ${{ secrets.REGISTRY_AUTH }}

            -   name: Build and push Docker image
                uses: docker/build-push-action@v4
                with:
                    context: .
                    file: docker/Dockerfile.dashboard
                    push: true
                    tags: registry.private6mans.xyz/dashboard:${{ needs.extract-branch.outputs.branch }}

    build-site:
        runs-on: ubuntu-latest
        needs:
            -   extract-branch
            -   check-folders
        if: ${{ needs.check-folders.outputs.run_site_job == 'true' && needs.extract-branch.outputs.branch == 'main' }}
        steps:
            -   name: Check out the repo
                uses: actions/checkout@v3
                with:
                    submodules: recursive

            -   name: Login to the registry
                uses: docker/login-action@v2
                with:
                    registry: registry.private6mans.xyz
                    username: p6m
                    password: ${{ secrets.REGISTRY_AUTH }}

            -   name: Build and push Docker image
                uses: docker/build-push-action@v4
                with:
                    context: .
                    file: docker/Dockerfile.site
                    push: true
                    tags: registry.private6mans.xyz/site:latest

    deploy:
        runs-on: ubuntu-latest
        needs:
            -   extract-branch
            -   check-folders
            -   build-bot
            -   build-leaderboard
            -   build-dashboard
            -   build-site
        if: always()
        steps:
            -   name: Set up SSH client and deploy bot, leaderboard and dashboard
                if: ${{ needs.check-folders.outputs.run_bot_job == 'true' || needs.check-folders.outputs.run_leaderboard_job == 'true' || needs.check-folders.outputs.run_dashboard_job == 'true' }}
                run: |
                    eval $(ssh-agent -s)
                    echo '${{ secrets.PRIVATE_KEY }}' | tr -d '\r' | ssh-add -
                    ssh -o StrictHostKeyChecking=no '${{ secrets.USERNAME }}@${{ secrets.HOST }}' 'cd ~/6mans/${{ needs.extract-branch.outputs.branch }}; docker-compose pull; docker-compose up -d'

            -   name: Set up SSH client and deploy site
                if: ${{ needs.check-folders.outputs.run_site_job == 'true' && needs.extract-branch.outputs.branch == 'main' }}
                run: |
                    eval $(ssh-agent -s)
                    echo '${{ secrets.PRIVATE_KEY }}' | tr -d '\r' | ssh-add -
                    ssh -o StrictHostKeyChecking=no '${{ secrets.USERNAME }}@${{ secrets.HOST }}' 'cd ~/6mans/site; docker-compose pull; docker-compose up -d'
